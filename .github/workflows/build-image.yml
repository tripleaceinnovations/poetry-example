name: Build Docker Image

on:
  workflow_call:
    inputs:
      image_name:
        description: >
          Name of image
        required: true
        type: string

      dockerfile:
        description: >
          Name of dockerfile to use
        required: false
        type: string
        default: Dockerfile

      # image_tag:
      #   description: >
      #     Docker image tag
      #   required: false
      #   type: string

      package_dir:
        description: >
          some package type
        required: false
        type: string
        default: somedir

      my_artifact_name:
        description: >
          Docker atifact name
        required: false
        type: string
        default: some-docker-image

      registry:
        description: >
          Docker Registry
        required: false
        type: string
        default: dexydevdoc

      arch:
        description: >
          Arch
        required: false
        type: string
        default: amd64

      os:
        description: >
          OS
        required: false
        type: string
        default: linux
  
    secrets:
      docker_username:
        description: username for docker registry
        required: true

      docker_password:
        description: password or token for docker registry
        required: true

jobs:
  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Get tag
        id: imagetag
        run: echo "tag=$(date +%s)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Set up Docker context
        id: buildx-context
        run: docker context create builders

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          endpoint: builders
          driver: docker

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          platforms:  ${{ inputs.os }}/${{ inputs.arch }}
          load: true
          tags: ${{ inputs.image_name }}:${{ steps.imagetag.outputs.tag }}-${{ inputs.arch }}
          push: false
  
      - name: Archive built image
        run: |
          set -xe -o pipeline
          mkdir -p ${{ inputs.package_dir }}
          export DOCKER_TAG="${{ inputs.image_name }}:${{ steps.imagetag.outputs.tag }}-${{ inputs.arch }}"
          # cp ${{ inputs.dockerfile }} ${{ inputs.package_dir }}/Dockerfile
          # docker save -o "${{ inputs.package_dir }}/${{ inputs.my_artifact_name }}-${{ inputs.arch }}.tar "${DOCKER_TAG}-${{ inputs.arch }}"
          echo "${DOCKER_TAG}" > ${{ inputs.package_dir }}/docker-tag

          # export DOCKER_TAG=$(cat ${{ inputs.packages_dir }}/docker-tag)
          # echo "image=${{ steps.docker.outputs.registry }}/${DOCKER_TAG}" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.my_artifact_name }}-${{ inputs.arch }}
          path: ${{ inputs.package_dir }}
